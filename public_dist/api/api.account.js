let fs=require("fs"),path=require("path"),UserModel=require("../model/user").UserModel,{compressData,deCompressData}=require("../util/compression"),SetToken=require("./api.auth").SetToken,dataEncrypt=require("../util/crpyto").dataEncrypt,ResultResponse=require("../util/resultResponse");async function Register(e){try{for(var r in e)if("name"!==r&&"birth"!==r&&"gender"!==r&&"pw"!==r&&"job"!==r){var t,a=new Object,o=("id"===r?a[r]=e[r]:a[r+".value"]=e[r],await UserModel.findOne(a));if(o)return t=`register ${r} exists`,new ResultResponse(403,null,t)}var l=new UserModel(e);l.pw=compressData(l.pw),l.email={value:e.email,isPublic:!0},l.phone={value:e.phone,isPublic:!0},l.birth={value:e.birth,isPublic:!0},l.profileImg=null;let n=l.id,s=path.join(__dirname,"..","/"+process.env.FILE_DIRECTORY_NAME);return fs.mkdir(path.join(""+s,n),e=>{if(e)return console.log(e);fs.mkdir(path.join(s+"/"+n,"profile"),e=>{if(e)return console.log(e)}),fs.mkdir(path.join(s+"/"+n,"file"),e=>{if(e)return console.log(e)})}),l.save(),new ResultResponse(200)}catch(e){l=new ResultResponse(404,e.stack,e.message);throw console.log(l),l}}async function Login(e,n){try{var s,r,t,a=await UserModel.findOne({id:e});return a?a.pw===compressData(n)?(s=SetToken(a.id),r=SetToken(a.id,!0),t=JSON.stringify({a:s,r:r}),new ResultResponse(200,compressData(t))):new ResultResponse(403,null,"wrong Password"):new ResultResponse(403,null,"null User")}catch(e){throw ResultResponse(400,e,"Login API error")}}function Logout(e){try{return e.a=null,e.r=null,new ResultResponse(200,"logout success")}catch(e){throw new ResultResponse(400,data,"Logout Error error")}}async function IdSearch(e){try{var{name:n,email:s,phone:r}=e,t=await UserModel.findOne({name:n,"email.value":s,"phone.value":r});return t?new ResultResponse(200,dataEncrypt(t.id)):new ResultResponse(403,null,"userInfo null")}catch(e){}}async function PwSearch(e){try{var{id:n,name:s,email:r,phone:t}=e;return await UserModel.findOne({id:n,name:s,"email.value":r,"phone.value":t})?new ResultResponse(200):new ResultResponse(403,null,"userInfo null")}catch(e){}}async function PwChange(e){try{var{id:n,pw:s}=e,r=await UserModel.findOne({id:n});return r?r.pw===compressData(s)?new ResultResponse(403,null,"same as previous pw"):(r.pw=compressData(s),r.save(),new ResultResponse(200)):new ResultResponse(403,null,"userInfo null")}catch(e){}}async function Withdrawal(e){try{await UserModel.findOne({id:e});var n=path.join(__dirname,"..","/"+process.env.FILE_DIRECTORY_NAME),s=path.join(n,e),r=await UserModel.deleteOne({id:e});return 0===r.deletedCount?new ResultResponse(403,r,"withdrawal fail"):(fs.existsSync(s)&&fs.rmSync(s,{recursive:!0,force:!0}),new ResultResponse(200))}catch(e){console.log(e,"Withdrawal err")}}module.exports={Register:Register,Login:Login,Logout:Logout,IdSearch:IdSearch,PwSearch:PwSearch,PwChange:PwChange,Withdrawal:Withdrawal};// build date : 2024. 12. 13. 오전 10:11:20