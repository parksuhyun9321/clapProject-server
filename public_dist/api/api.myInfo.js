let UserModel=require("../model/user").UserModel,encryptKey=require("../util/key").encryptKey,ResultResponse=require("../util/resultResponse"),dataEncrypt=require("../util/crpyto").dataEncrypt;async function getMyInfo(e){try{var t={id:e},n=await UserModel.findOne(t),o={id:n.id,name:n.name,email:n.email,phone:n.phone,birth:n.birth,job:n.job};return new ResultResponse(200,dataEncrypt(o))}catch(e){throw new ResultResponse(400,e,"getMyInfo ERROR")}}async function setMyInfo(e,t,n){try{var o={id:e},r=await UserModel.findOne(o);if(!r)return new ResultResponse(403,o.id,"userInfo null");"job"===t?r.job=n:r[t].isPublic=n,r.save();var s={id:r.id,name:r.name,email:r.email,phone:r.phone,birth:r.birth,job:r.job};return new ResultResponse(200,s)}catch(e){throw new ResultResponse(400,e,"setMyInfo ERROR")}}async function getMyHome(e){try{var t={id:e},n=await UserModel.findOne(t),o=encryptKey(n.id);return new ResultResponse(200,dataEncrypt(o))}catch(e){throw new ResultResponse(400,e,"getMyHome ERROR")}}module.exports={getMyInfo:getMyInfo,setMyInfo:setMyInfo,getMyHome:getMyHome};// build date : 2024. 12. 14. 오후 12:16:32